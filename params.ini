#Parameters for CAMB
#rv={0,2,15,0}
#Nc={-2.4,-0.4,2.73}
#
#
#output_root is prefixed to output file name
output_root = test
#evolucionfile = evolve3.dat
#Npc= 100000
#fixqq = 0
#r_vc = 15
#N_c = -3

#What to do
get_scalar_cls = T
get_vector_cls = F
get_tensor_cls = F
get_transfer   = T

#if do_lensing then scalar_output_file contains additional columns of l^4 C_l^{pp} and l^3 C_l^{pT}
#where p is the projected potential. Output lensed CMB Culs (without tensors) are in lensed_output_file below.
do_lensing     = T

# 0: linear, 1: non-linear matter power (HALOFIT), 2: non-linear CMB lensing (HALOFIT), 
# 3: both non-linear matter power and CMB lensing (HALOFIT) 
do_nonlinear = 0

#Maximum multipole and k*eta. 
#  Note that C_ls near l_max are inaccurate (about 5%), go to 50 more than you need
#  Lensed power spectra are computed to l_max_scalar-100 
#  To get accurate lensed BB need to have l_max_scalar>2000, k_eta_max_scalar > 10000
#  Otherwise k_eta_max_scalar=2*l_max_scalar usually suffices, or don't set to use default
l_max_scalar      = 2200
#k_eta_max_scalar  = 4000

#  Tensor settings should be less than or equal to the above
l_max_tensor      = 1500
k_eta_max_tensor  = 3000

#Main cosmological parameters, neutrino masses are assumed degenerate
# If use_phyical set physical densities in baryons, CDM and neutrinos + Omega_k
use_physical   = T
ombh2          = 0.0222
omch2          = 0.1197
omnuh2         = 0
omk            = 0
hubble         = 67

#effective equation of state parameter for dark energy
w              = -1
#constant comoving sound speed of the dark energy (1=quintessence)
cs2_lam        = 1

#varying w is not supported by default, compile with EQUATIONS=equations_ppf to use crossing PPF w-wa model:
#wa             = 0
##if use_tabulated_w read (a,w) from the following user-supplied file instead of above
#use_tabulated_w = F
#wafile = wa.dat

#if use_physical = F set parameters as here
#omega_baryon   = 0.0462
#omega_cdm      = 0.2538
#omega_lambda   = 0.7
#omega_neutrino = 0

temp_cmb           = 2.7255
helium_fraction    = 0.24

#for share_delta_neff = T, the fractional part of massless_neutrinos gives the change in the effective number 
#(for QED + non-instantaneous decoupling)  i.e. the increase in neutrino temperature,
#so Neff = massless_neutrinos + sum(massive_neutrinos)
#For full neutrino parameter details see http://cosmologist.info/notes/CAMB.pdf
massless_neutrinos = 3.046

#number of distinct mass eigenstates
nu_mass_eigenstates = 1
#array of the integer number of physical neutrinos per eigenstate, e.g. massive_neutrinos = 2 1
massive_neutrinos  = 1
#specify whether all neutrinos should have the same temperature, specified from fractional part of massless_neutrinos
share_delta_neff = T
#nu_mass_fractions specifies how Omeganu_h2 is shared between the eigenstates
#i.e. to indirectly specify the mass of each state; e.g. nu_mass_factions= 0.75 0.25
nu_mass_fractions = 1
#if share_delta_neff = F, specify explicitly the degeneracy for each state (e.g. for sterile with different temperature to active)
#(massless_neutrinos must be set to degeneracy for massless, i.e. massless_neutrinos does then not include Deleta_Neff from massive)
#if share_delta_neff=T then degeneracies is not given and set internally
#e.g. for massive_neutrinos = 2 1, this gives equal temperature to 4 neutrinos: nu_mass_degeneracies = 2.030 1.015, massless_neutrinos = 1.015
nu_mass_degeneracies = 

#Initial power spectrum, amplitude, spectral index and running. Pivot k in Mpc^{-1}.
initial_power_num         = 1
pivot_scalar              = 0.05
pivot_tensor              = 0.05
scalar_amp(1)             = 2.1e-9
scalar_spectral_index(1)  = 0.96
scalar_nrun(1)            = 0
tensor_spectral_index(1)  = 0
#ratio is that of the initial tens/scal power spectrum amplitudes
initial_ratio(1)          = 1
#note vector modes use the scalar settings above


#Reionization, ignored unless reionization = T, re_redshift measures where x_e=0.5
reionization         = T

re_use_optical_depth = T
re_optical_depth     = 0.09
#If re_use_optical_depth = F then use following, otherwise ignored
re_redshift          = 11
#width of reionization transition. CMBFAST model was similar to re_delta_redshift~0.5.
re_delta_redshift    = 1.5
#re_ionization_frac=-1 sets to become fully ionized using YE to get helium contribution
#Otherwise x_e varies from 0 to re_ionization_frac
re_ionization_frac   = -1


#RECFAST 1.5.x recombination parameters;
RECFAST_fudge = 1.14
RECFAST_fudge_He = 0.86
RECFAST_Heswitch = 6
RECFAST_Hswitch  = T

# CosmoMC parameters - compile with RECOMBINATION=cosmorec and link to CosmoMC to use these
#
# cosmorec_runmode== 0: CosmoMC run with diffusion
#                    1: CosmoMC run without diffusion
#                    2: RECFAST++ run (equivalent of the original RECFAST version)
#                    3: RECFAST++ run with correction function of Calumba & Thomas, 2010
#
# For 'cosmorec_accuracy' and 'cosmorec_fdm' see CosmoMC for explanation
#---------------------------------------------------------------------------------------
#cosmorec_runmode        = 0
#cosmorec_accuracy       = 0
#cosmorec_fdm            = 0

#Initial scalar perturbation mode (adiabatic=1, CDM iso=2, Baryon iso=3, 
# neutrino density iso =4, neutrino velocity iso = 5) 
initial_condition   = 1
#If above is zero, use modes in the following (totally correlated) proportions
#Note: we assume all modes have the same initial power spectrum
initial_vector = -1 0 0 0 0

#For vector modes: 0 for regular (neutrino vorticity mode), 1 for magnetic
vector_mode = 0

#Normalization
COBE_normalize = F
##CMB_outputscale scales the output Culs
#To get MuK^2 set realistic initial amplitude (e.g. scalar_amp(1) = 2.3e-9 above) and
#otherwise for dimensionless transfer functions set scalar_amp(1)=1 and use
#CMB_outputscale = 1
CMB_outputscale = 7.42835025e12 

#Transfer function settings, transfer_kmax=0.5 is enough for sigma_8
#transfer_k_per_logint=0 sets sensible non-even sampling; 
#transfer_k_per_logint=5 samples fixed spacing in log-k
#transfer_interp_matterpower =T produces matter power in regular interpolated grid in log k; 
# use transfer_interp_matterpower =F to output calculated values (e.g. for later interpolation)
transfer_high_precision = F
transfer_kmax           = 10
transfer_k_per_logint   = 0
#transfer_num_redshifts  = 1
transfer_interp_matterpower = T
#transfer_redshift(1)    = 0
transfer_filename(1)    = transfer_out.dat
#Matter power spectrum output against k/h in units of h^{-3} Mpc^3
transfer_matterpower(1) = matterpower.dat


#Output files not produced if blank. make camb_fits to use the FITS setting.
scalar_output_file = scalCls.dat
vector_output_file = vecCls.dat
tensor_output_file = tensCls.dat
total_output_file  = totCls.dat
lensed_output_file = lensedCls.dat
lensed_total_output_file  =lensedtotCls.dat
lens_potential_output_file = lenspotentialCls.dat
FITS_filename      = scalCls.fits

#Bispectrum parameters if required; primordial is currently only local model (fnl=1)
#lensing is fairly quick, primordial takes several minutes on quad core
do_lensing_bispectrum = F
do_primordial_bispectrum = F

#1 for just temperature, 2 with E
bispectrum_nfields = 1
#set slice non-zero to output slice b_{bispectrum_slice_base_L L L+delta}
bispectrum_slice_base_L = 0
bispectrum_ndelta=3
bispectrum_delta(1)=0
bispectrum_delta(2)=2
bispectrum_delta(3)=4
#bispectrum_do_fisher estimates errors and correlations between bispectra
#note you need to compile with LAPACK and FISHER defined to use get the Fisher info
bispectrum_do_fisher= F
#Noise is in muK^2, e.g. 2e-4 roughly for Planck temperature
bispectrum_fisher_noise=0
bispectrum_fisher_noise_pol=0
bispectrum_fisher_fwhm_arcmin=7
#Filename if you want to write full reduced bispectrum (at sampled values of l_1)
bispectrum_full_output_file=
bispectrum_full_output_sparse=F
#Export alpha_l(r), beta_l(r) for local non-Gaussianity
bispectrum_export_alpha_beta=F

##Optional parameters to control the computation speed,accuracy and feedback

#If feedback_level > 0 print out useful information computed about the model
feedback_level = 1

#write out various derived parameters
derived_parameters = T

# 1: curved correlation function, 2: flat correlation function, 3: inaccurate harmonic method
lensing_method = 1
accurate_BB = F


#massive_nu_approx: 0 - integrate distribution function
#                   1 - switch to series in velocity weight once non-relativistic
massive_nu_approx = 1

#Whether you are bothered about polarization. 
accurate_polarization   = T

#Whether you are bothered about percent accuracy on EE from reionization
accurate_reionization   = T

#whether or not to include neutrinos in the tensor evolution equations
do_tensor_neutrinos     = T

#Whether to turn off small-scale late time radiation hierarchies (save time,v. accurate)
do_late_rad_truncation   = T

#Computation parameters
#if number_of_threads=0 assigned automatically
number_of_threads       = 0

#Default scalar accuracy is about 0.3% (except lensed BB) if high_accuracy_default=F
#If high_accuracy_default=T the default target accuracy is 0.1% at L>600 (with boost parameter=1 below)
#Try accuracy_boost=2, l_accuracy_boost=2 if you want to check stability/even higher accuracy
#Note increasing accuracy_boost parameters is very inefficient if you want higher accuracy,
#but high_accuracy_default is efficient 

high_accuracy_default=T

#Increase accuracy_boost to decrease time steps, use more k values,  etc.
#Decrease to speed up at cost of worse accuracy. Suggest 0.8 to 3.
accuracy_boost          = 1

#Larger to keep more terms in the hierarchy evolution. 
l_accuracy_boost        = 1

#Increase to use more C_l values for interpolation.
#Increasing a bit will improve the polarization accuracy at l up to 200 -
#interpolation errors may be up to 3%
#Decrease to speed up non-flat models a bit
l_sample_boost          = 1
transfer_num_redshifts= 201
transfer_redshift(1)=3.000 
transfer_redshift(2)=2.985 
transfer_redshift(3)=2.970 
transfer_redshift(4)=2.955 
transfer_redshift(5)=2.940 
transfer_redshift(6)=2.925 
transfer_redshift(7)=2.910 
transfer_redshift(8)=2.895 
transfer_redshift(9)=2.880 
transfer_redshift(10)=2.865 
transfer_redshift(11)=2.850 
transfer_redshift(12)=2.835 
transfer_redshift(13)=2.820 
transfer_redshift(14)=2.805 
transfer_redshift(15)=2.790 
transfer_redshift(16)=2.775 
transfer_redshift(17)=2.760 
transfer_redshift(18)=2.745 
transfer_redshift(19)=2.730 
transfer_redshift(20)=2.715 
transfer_redshift(21)=2.700 
transfer_redshift(22)=2.685 
transfer_redshift(23)=2.670 
transfer_redshift(24)=2.655 
transfer_redshift(25)=2.640 
transfer_redshift(26)=2.625 
transfer_redshift(27)=2.610 
transfer_redshift(28)=2.595 
transfer_redshift(29)=2.580 
transfer_redshift(30)=2.565 
transfer_redshift(31)=2.550 
transfer_redshift(32)=2.535 
transfer_redshift(33)=2.520 
transfer_redshift(34)=2.505 
transfer_redshift(35)=2.490 
transfer_redshift(36)=2.475 
transfer_redshift(37)=2.460 
transfer_redshift(38)=2.445 
transfer_redshift(39)=2.430 
transfer_redshift(40)=2.415 
transfer_redshift(41)=2.400 
transfer_redshift(42)=2.385 
transfer_redshift(43)=2.370 
transfer_redshift(44)=2.355 
transfer_redshift(45)=2.340 
transfer_redshift(46)=2.325 
transfer_redshift(47)=2.310 
transfer_redshift(48)=2.295 
transfer_redshift(49)=2.280 
transfer_redshift(50)=2.265 
transfer_redshift(51)=2.250 
transfer_redshift(52)=2.235 
transfer_redshift(53)=2.220 
transfer_redshift(54)=2.205 
transfer_redshift(55)=2.190 
transfer_redshift(56)=2.175 
transfer_redshift(57)=2.160 
transfer_redshift(58)=2.145 
transfer_redshift(59)=2.130 
transfer_redshift(60)=2.115 
transfer_redshift(61)=2.100 
transfer_redshift(62)=2.085 
transfer_redshift(63)=2.070 
transfer_redshift(64)=2.055 
transfer_redshift(65)=2.040 
transfer_redshift(66)=2.025 
transfer_redshift(67)=2.010 
transfer_redshift(68)=1.995 
transfer_redshift(69)=1.980 
transfer_redshift(70)=1.965 
transfer_redshift(71)=1.950 
transfer_redshift(72)=1.935 
transfer_redshift(73)=1.920 
transfer_redshift(74)=1.905 
transfer_redshift(75)=1.890 
transfer_redshift(76)=1.875 
transfer_redshift(77)=1.860 
transfer_redshift(78)=1.845 
transfer_redshift(79)=1.830 
transfer_redshift(80)=1.815 
transfer_redshift(81)=1.800 
transfer_redshift(82)=1.785 
transfer_redshift(83)=1.770 
transfer_redshift(84)=1.755 
transfer_redshift(85)=1.740 
transfer_redshift(86)=1.725 
transfer_redshift(87)=1.710 
transfer_redshift(88)=1.695 
transfer_redshift(89)=1.680 
transfer_redshift(90)=1.665 
transfer_redshift(91)=1.650 
transfer_redshift(92)=1.635 
transfer_redshift(93)=1.620 
transfer_redshift(94)=1.605 
transfer_redshift(95)=1.590 
transfer_redshift(96)=1.575 
transfer_redshift(97)=1.560 
transfer_redshift(98)=1.545 
transfer_redshift(99)=1.530 
transfer_redshift(100)=1.515 
transfer_redshift(101)=1.500 
transfer_redshift(102)=1.485 
transfer_redshift(103)=1.470 
transfer_redshift(104)=1.455 
transfer_redshift(105)=1.440 
transfer_redshift(106)=1.425 
transfer_redshift(107)=1.410 
transfer_redshift(108)=1.395 
transfer_redshift(109)=1.380 
transfer_redshift(110)=1.365 
transfer_redshift(111)=1.350 
transfer_redshift(112)=1.335 
transfer_redshift(113)=1.320 
transfer_redshift(114)=1.305 
transfer_redshift(115)=1.290 
transfer_redshift(116)=1.275 
transfer_redshift(117)=1.260 
transfer_redshift(118)=1.245 
transfer_redshift(119)=1.230 
transfer_redshift(120)=1.215 
transfer_redshift(121)=1.200 
transfer_redshift(122)=1.185 
transfer_redshift(123)=1.170 
transfer_redshift(124)=1.155 
transfer_redshift(125)=1.140 
transfer_redshift(126)=1.125 
transfer_redshift(127)=1.110 
transfer_redshift(128)=1.095 
transfer_redshift(129)=1.080 
transfer_redshift(130)=1.065 
transfer_redshift(131)=1.050 
transfer_redshift(132)=1.035 
transfer_redshift(133)=1.020 
transfer_redshift(134)=1.005 
transfer_redshift(135)=0.990 
transfer_redshift(136)=0.975 
transfer_redshift(137)=0.960 
transfer_redshift(138)=0.945 
transfer_redshift(139)=0.930 
transfer_redshift(140)=0.915 
transfer_redshift(141)=0.900 
transfer_redshift(142)=0.885 
transfer_redshift(143)=0.870 
transfer_redshift(144)=0.855 
transfer_redshift(145)=0.840 
transfer_redshift(146)=0.825 
transfer_redshift(147)=0.810 
transfer_redshift(148)=0.795 
transfer_redshift(149)=0.780 
transfer_redshift(150)=0.765 
transfer_redshift(151)=0.750 
transfer_redshift(152)=0.735 
transfer_redshift(153)=0.720 
transfer_redshift(154)=0.705 
transfer_redshift(155)=0.690 
transfer_redshift(156)=0.675 
transfer_redshift(157)=0.660 
transfer_redshift(158)=0.645 
transfer_redshift(159)=0.630 
transfer_redshift(160)=0.615 
transfer_redshift(161)=0.600 
transfer_redshift(162)=0.585 
transfer_redshift(163)=0.570 
transfer_redshift(164)=0.555 
transfer_redshift(165)=0.540 
transfer_redshift(166)=0.525 
transfer_redshift(167)=0.510 
transfer_redshift(168)=0.495 
transfer_redshift(169)=0.480 
transfer_redshift(170)=0.465 
transfer_redshift(171)=0.450 
transfer_redshift(172)=0.435 
transfer_redshift(173)=0.420 
transfer_redshift(174)=0.405 
transfer_redshift(175)=0.390 
transfer_redshift(176)=0.375 
transfer_redshift(177)=0.360 
transfer_redshift(178)=0.345 
transfer_redshift(179)=0.330 
transfer_redshift(180)=0.315 
transfer_redshift(181)=0.300 
transfer_redshift(182)=0.285 
transfer_redshift(183)=0.270 
transfer_redshift(184)=0.255 
transfer_redshift(185)=0.240 
transfer_redshift(186)=0.225 
transfer_redshift(187)=0.210 
transfer_redshift(188)=0.195 
transfer_redshift(189)=0.180 
transfer_redshift(190)=0.165 
transfer_redshift(191)=0.150 
transfer_redshift(192)=0.135 
transfer_redshift(193)=0.120 
transfer_redshift(194)=0.105 
transfer_redshift(195)=0.090 
transfer_redshift(196)=0.075 
transfer_redshift(197)=0.060 
transfer_redshift(198)=0.045 
transfer_redshift(199)=0.030 
transfer_redshift(200)=0.015 
transfer_redshift(201)=0.000 
